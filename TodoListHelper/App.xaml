<prism:PrismApplication
    x:Class="TodoListHelper.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:libGit2Sharp="clr-namespace:LibGit2Sharp;assembly=LibGit2Sharp"
    xmlns:models="clr-namespace:TodoListHelper.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:viewModels="clr-namespace:TodoListHelper.ViewModels">

    <Application.Resources>
        <SolidColorBrush x:Key="BgColorBrush" Color="#333333" />
        <SolidColorBrush x:Key="LightBgColorBrush" Color="#444444" />
        <SolidColorBrush x:Key="FgColorBrush" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="DarkFgColorBrush" Color="LightSteelBlue" />
        <system:Double x:Key="FontSize">14</system:Double>
        <models:DateTimeConverter x:Key="DateTimeConverter" />

        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>

        <DataTemplate x:Key="ListViewDataTemplate" DataType="{x:Type models:Todo}">
            <Border Padding="3,0">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Working}" Value="True">
                                <Setter Property="Background" Value="{StaticResource LightBgColorBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <StackPanel>

                    <TextBlock
                        Height="Auto"
                        Foreground="{StaticResource FgColorBrush}"
                        Text="{Binding Title}" />
                    <TextBlock Foreground="{StaticResource DarkFgColorBrush}" Text="{Binding AdditionalText}" />
                </StackPanel>

            </Border>
        </DataTemplate>

        <DataTemplate x:Key="CommitListViewDataTemplate" DataType="{x:Type libGit2Sharp:Commit}">
            <Border>
                <StackPanel Margin="0,1" Orientation="Horizontal">
                    <TextBlock
                        Width="130"
                        FontFamily="HackGen Console NF"
                        Foreground="{StaticResource FgColorBrush}"
                        Text="{Binding Author.When, Converter={StaticResource DateTimeConverter}}" />

                    <TextBlock
                        FontFamily="HackGen Console NF"
                        Foreground="{StaticResource FgColorBrush}"
                        Text="{Binding MessageShort}" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <ContextMenu x:Key="TodosContextMenu">
            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.StartTodoCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo を開始する" />

            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.FinishTodoCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo を完了する" />

            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.CloneTodoCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo を複製する" />

            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.AddMessageCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo にコメントをつける" />
        </ContextMenu>

        <ContextMenu x:Key="WorkingTodosContextMenu">
            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.FinishTodoCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo を完了する" />

            <MenuItem
                Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Tag).(viewModels:MainWindowViewModel.AddMessageCommand)}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.(ListViewItem.Content)}"
                Header="Todo にコメントをつける" />
        </ContextMenu>

    </Application.Resources>
</prism:PrismApplication>